name: Test

on: [push]

env:
  ETHERSCAN_TOKEN:  ${{ secrets.ETHERSCAN_TOKEN }}
  WEB3_INFURA_PROJECT_ID: ${{ secrets.WEB3_INFURA_PROJECT_ID }}

jobs:

  brownie:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        type: [functional]

    steps:
    - name: Check out github repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 1

    - name: Check ETHERSCAN_TOKEN
      run: |
        if [ -z "$ETHERSCAN_TOKEN" ] ; then
          echo "Missing ENV variable ETHERSCAN_TOKEN"
          exit 1
        fi

    - name: Check WEB3_INFURA_PROJECT_ID
      run: |
        if [ -z "$WEB3_INFURA_PROJECT_ID" ] ; then
          echo "Missing ENV variable WEB3_INFURA_PROJECT_ID"
          exit 1
        fi

    - name: Cache compiler installations
      uses: actions/cache@v2
      with:
        path: |
          ~/.solcx
          ~/.vvm
        key: ${{ runner.os }}-compiler-cache

    - name: Setup node.js
      uses: actions/setup-node@v1
      with:
        node-version: '12.x'

    - name: Install ganache
      run: npm install -g ganache-cli@6.11

    - name: Set up python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Set pip cache directory path
      id: pip-cache-dir-path
      run: |
        echo "::set-output name=dir::$(pip cache dir)"

    - name: Restore pip cache
      uses: actions/cache@v2
      id: pip-cache
      with:
        # mind Linux runner
        path: |
          /opt/hostedtoolcache/Python/3.8.*
          ${{ steps.pip-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements-dev.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-${{ hashFiles('**/requirements-dev.txt') }}
          ${{ runner.os }}-pip-

    - name: Install python dependencies
      if: steps.pip-cache.outputs.cache-hit != 'true'
      run: pip install -r requirements-dev.txt

    - name: Run tests
      run: brownie test tests/${{ matrix.type }}/ -s --coverage
